#
# Ansible managed
#
dependency:
  name: galaxy
  options:
    # role-file: requirements.yml
    # requirements-file: requirements.yml
    role-file: ansible-galaxy-requirements.yml
    roles-path: ${HOME}/.ansible/roles
    requirements-file: ansible-galaxy-requirements.yml
    collections-path: ${HOME}/.ansible/collections
    ignore-errors: true
    force: false
lint: |
  set -e
  yamllint .
  ansible-lint
driver:
  name: docker
platforms:
  # - name: "crun-${image:-docker-centos8-ansible}-${tag:-latest}${TOX_ENVNAME}"
  #   image: "${namespace:-buluma}/${image:-docker-centos8-ansible}:${tag:-latest}"
  #   command: /sbin/init
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: yes
  #   pre_build_image: yes
  #   tty: true
  #   environment:
  #     container: docker
  # - name: "crun-${image:-docker-centos7-ansible}-${tag:-latest}${TOX_ENVNAME}"
  #   image: "${namespace:-buluma}/${image:-docker-centos7-ansible}:${tag:-latest}"
  #   command: /sbin/init
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: yes
  #   pre_build_image: yes
  #   tty: true
  #   environment:
  #     container: docker
  # - name: "crun-${image:-docker-ubuntu2004-ansible}-${tag:-latest}${TOX_ENVNAME}"
  #   image: "${namespace:-buluma}/${image:-docker-ubuntu2004-ansible}:${tag:-latest}"
  #   command: /sbin/init
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: yes
  #   pre_build_image: yes
  #   tty: true
  #   environment:
  #     container: docker
  # - name: "crun-${image:-docker-ubuntu2204-ansible}-${tag:-latest}${TOX_ENVNAME}"
  #   image: "${namespace:-buluma}/${image:-docker-ubuntu2204-ansible}:${tag:-latest}"
  #   command: /sbin/init
  #   volumes:
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #   privileged: yes
  #   pre_build_image: yes
  #   tty: true
  #   environment:
  #     container: docker
  - name: "crun-${image:-fedora}-${tag:-latest}${TOX_ENVNAME}"
    image: "${namespace:-buluma}/${image:-fedora}:${tag:-latest}"
    command: /sbin/init
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: yes
    pre_build_image: yes
    tty: true
    environment:
      container: docker
provisioner:
  name: ansible
  config_options:
    defaults:
      interpreter_python: auto_legacy_silent
    ssh_connection:
      pipelining: true
verifier:
  name: ansible
scenario:
  create_sequence:
    - create
    - prepare
  check_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - create
    - prepare
    - converge
  destroy_sequence:
    - cleanup
    - destroy
  test_sequence:
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
